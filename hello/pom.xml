<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.4</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>hello</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>hello</name>
	<packaging>war</packaging><!--외부톰캣 사용시 작성 -->
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>1.8</java.version>
	</properties>
	<!--maven profile 설정을 통해, 빌드 단계에서 원하는 리소스 폴더를 classpath에 추가하는 작업을 진행 -->
	<!--maven은 Apache사에서 만든 빌드툴다. pom.xml 파일으 통해 정형화된 빌드 시스템으로 프로젝트를 관리해준다. 프로젝트의 전체적인 라이프 사이클을 관리한다. -->
	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<env>dev</env>
			</properties>
		</profile>
		<profile>
			<id>local</id>
			<properties>
				<env>local</env>
			</properties>
		</profile>
	</profiles>
	
	<dependencies>
		<!--추가 라이브러리 시작-->
		<!--json -->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>2.12.0</version>
		</dependency>
		<!--lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<!--JPA -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- jstl -->		
		<dependency>
		    <groupId>javax.servlet</groupId>
		    <artifactId>jstl</artifactId>
		    <version>1.2</version>
		</dependency>
		<!-- mysql 의존성 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!--추가 라이브러리 끝-->
		
		<!-- Spring web : 웹 어플리케이션을 만드는 경우 해당 모듈을 사용. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Spring boot 내장 server tomcat -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<!--선택된 profile에 맞는 리소스 폴더를 classpath에 넣는 작업 기본적으로 src/main/resources는 들어가고 부가적으로 환격별 리소스 폴더를 넣으면된다. -->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>		
			<resource>
				<directory>src/main/resources-dev</directory>
			</resource>		
			<resource>
				<directory>src/main/resources-local</directory>
			</resource>		
		</resources>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>